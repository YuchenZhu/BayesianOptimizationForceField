####################################################
# Solvation Energy of ions
#################### SETTING UP ####################

units real
dimension 3
newton on
boundary p p p
atom_style full

read_data in.lammpsdata
include in.forcefield

#################### SIMULATION CONDITIONS ####################

variable Temp equal 298       # Temperature in K
variable Pres equal 1.0       # Pressure in atm.

variable RandomSeed equal 971 # The random seed for velocity
variable tstep equal 2.0      # 1fs

#################### SIMULATION length ####################

variable Ninit equal 1000
variable Nthermo equal 5000
variable Nwin equal 50000      # length of each lambda window (should be at least 500 ps and at most 2 ns)
variable Nevery equal 1         # sample frequency
variable Nfreq equal ${Nwin}/100       # output frequency we want at least 100 good samples per window
variable Nrepeat equal ${Nfreq}/${Nevery}
variable delta equal 0.002      # perturbation parameter. do not change

#################### ATOM DEFINITIONS AND GROUPS ####################

# type 1: Ow
# type 2: Hw
# type 3: Na soft


group SHAKE type 1 2
group INTEGRATE type 1 2 3 

#################### SIMULATION DETAILS ####################

neighbor 2.0 bin
neigh_modify every 1 delay 0 check yes
run_style verlet

thermo_style one
thermo ${Nthermo}

#################### INITIALIZATION ####################

print ""
print "INITIALIZATION"
print ""

fix 0 SHAKE shake 1.0e-6 1000 0 b 1 a 1
fix 1 INTEGRATE npt temp ${Temp} ${Temp} $(100000.0*dt) iso ${Pres} ${Pres} $(1000000.0*dt)

timestep 0.0001
run ${Ninit}

timestep 0.001
run ${Ninit}

timestep 0.01
run ${Ninit}

timestep 0.1
unfix 1
fix 1 INTEGRATE npt temp ${Temp} ${Temp} $(10000.0*dt) iso ${Pres} ${Pres} $(100000.0*dt)
run ${Ninit}

timestep 0.5
unfix 1
fix 1 INTEGRATE npt temp ${Temp} ${Temp} $(1000.0*dt) iso ${Pres} ${Pres} $(10000.0*dt)
run ${Ninit}

timestep 1.0
unfix 1
fix 1 INTEGRATE npt temp ${Temp} ${Temp} $(100.0*dt) iso ${Pres} ${Pres} $(1000.0*dt)
run ${Ninit}

timestep 1.5
unfix 1
fix 1 INTEGRATE npt temp ${Temp} ${Temp} $(100.0*dt) iso ${Pres} ${Pres} $(1000.0*dt)
run ${Ninit}

timestep 2.0
unfix 1
fix 1 INTEGRATE npt temp ${Temp} ${Temp} $(100.0*dt) iso ${Pres} ${Pres} $(1000.0*dt)
run ${Ninit}

timestep ${tstep}
run ${Nwin}

reset_timestep 0

print ""
print "PRODUCTION"
print ""

dump trj all custom ${Nwin} out.lammpstrj id type xu yu zu
dump_modify trj sort 1
dump_modify trj append yes
dump_modify trj format line "%8d %5d %.3f %.3f %.3f"

variable lambda file in.lambdas
variable dlambda equal ${delta}

variable Volume equal vol
variable TotEn equal etotal
variable PotEn equal pe

compute T all temp
compute P all pressure T

print ""
print "NPT charge neutralization"
print ""

variable qNa equal 1.0*v_lambda

variable dqNa equal 1.0*v_dlambda

fix ADAPT all adapt/fep ${Nwin} atom charge 3 v_qNa after yes
compute FEP all fep ${Temp} atom charge 3 v_dqNa tail yes volume yes

label annihilation

shell mkdir lambda_coul_${lambda}

# outputs
fix VoluAve all ave/time ${Nevery} ${Nrepeat} ${Nfreq} v_Volume file lambda_coul_${lambda}/out.volume
fix TEAve all ave/time ${Nevery} ${Nrepeat} ${Nfreq} v_TotEn file lambda_coul_${lambda}/out.TotalE
fix PEAve all ave/time ${Nevery} ${Nrepeat} ${Nfreq} v_PotEn file lambda_coul_${lambda}/out.PotenE
fix TempAve all ave/time ${Nevery} ${Nrepeat} ${Nfreq} c_T file lambda_coul_${lambda}/out.temperature
fix PressAve all ave/time ${Nevery} ${Nrepeat} ${Nfreq} c_P file lambda_coul_${lambda}/out.pressure
fix FEP all ave/time ${Nevery} ${Nrepeat} ${Nfreq} c_FEP[1] c_FEP[2] c_FEP[3] file lambda_coul_${lambda}/out.solvation

print ""
print "adapt  lambda = ${lambda}, delta = ${delta}"
print "adapt  qNa = ${qNa}, dqNa = ${dqNa}"
print ""

run ${Nwin}

if "${lambda} > 0" then "next lambda" "jump in.simulation annihilation"
next lambda

unfix ADAPT
uncompute FEP
unfix VoluAve
unfix TEAve
unfix PEAve
unfix TempAve
unfix PressAve
unfix FEP

set type 3 charge 0.0


#################### 3) Slowly disappear the vdw interactions ######################

print ""
print "NPT disappearing"
print ""

variable lam equal v_lambda
variable lam2 equal v_lam*v_lam
variable dlam2 equal v_dlambda*v_dlambda

fix ADAPT all adapt/fep ${Nwin} pair lj/cut/tip4p/long/soft lambda 1*2 3 v_lam after yes
compute FEP all fep ${Temp} pair lj/cut/tip4p/long/soft lambda 1*2 3 v_dlambda tail yes volume yes

label decoupling

shell mkdir lambda_vdw_${lambda}

# outputs
fix VoluAve all ave/time ${Nevery} ${Nrepeat} ${Nfreq} v_Volume file lambda_vdw_${lambda}/out.volume
fix TEAve all ave/time ${Nevery} ${Nrepeat} ${Nfreq} v_TotEn file lambda_vdw_${lambda}/out.TotalE
fix PEAve all ave/time ${Nevery} ${Nrepeat} ${Nfreq} v_PotEn file lambda_vdw_${lambda}/out.PotenE
fix TempAve all ave/time ${Nevery} ${Nrepeat} ${Nfreq} c_T file lambda_vdw_${lambda}/out.temperature
fix PressAve all ave/time ${Nevery} ${Nrepeat} ${Nfreq} c_P file lambda_vdw_${lambda}/out.pressure
fix FEP all ave/time ${Nevery} ${Nrepeat} ${Nfreq} c_FEP[1] c_FEP[2] c_FEP[3] file lambda_vdw_${lambda}/out.solvation

print ""
print "adapt  lambda = ${lam}"
print ""

run ${Nwin}

if "${lambda} > 0" then "next lambda" "jump in.simulation decoupling"

quit
